package org.example;

import org.example.employeeManager.EmployeeManager;

import java.util.Scanner;

public class Main {

    private static final Scanner scanner = new Scanner(System.in);
    private static final EmployeeManager manager = new EmployeeManager(); // Criar apenas uma inst칙ncia do gerenciador

    // Fun칞칚o para remover um funcion치rio
    private static void removeEmployee() {
        System.out.println("""
                [1] - Para remover o funcion치rio Jo칚o
                [2] - Escolher outro funcion치rio
                """);
        int choice = scanner.nextInt(); // Leitura da escolha do usu치rio

        // Se o usu치rio escolheu remover Jo칚o
        if(choice == 1){
            manager.removeEmployeeByName("Jo칚o"); // Remove o funcion치rio Jo칚o
        } else {
            System.out.println("Digite o nome do funcion치rio: ");
            String name = scanner.next(); // Leitura do nome do funcion치rio a ser removido
            manager.removeEmployeeByName(name); // Remove o funcion치rio com o nome fornecido
        }
    }

    // Fun칞칚o para listar os funcion치rios por cargo
    private static void listEmployeesByRole() {
        System.out.println("Digite a fun칞칚o para listar os funcion치rios:");
        String role = scanner.nextLine(); // Leitura do cargo
        manager.displayEmployeesByRole(role); // Exibe os funcion치rios com o cargo fornecido
    }

    // Fun칞칚o para listar os funcion치rios por m칡s de anivers치rio
    private static void listEmployeesByBirthMonth() {
        System.out.println("""
        Escolha uma op칞칚o:
        [1] - Listar aniversariantes dos meses 10 e 12
        [2] - Escolher um m칡s espec칤fico
        """);

        int choice = scanner.nextInt(); // Leitura da escolha do usu치rio
        scanner.nextLine(); // Consumir a quebra de linha

        // Se o usu치rio escolheu listar aniversariantes de outubro e dezembro
        if (choice == 1) {
            manager.displayDefaultBirthMonths(); // Exibe os aniversariantes desses meses
        } else if (choice == 2) {
            System.out.println("Digite o n칰mero do m칡s (1-12): ");
            int month = scanner.nextInt(); // Leitura do m칡s desejado
            scanner.nextLine(); // Consumir a quebra de linha

            // Verifica se o m칡s digitado 칠 v치lido
            if (month < 1 || month > 12) {
                System.out.println("游늷 M칡s inv치lido! Digite um valor entre 1 e 12.");
            } else {
                manager.displayEmployeesByBirthMonth(month); // Exibe os aniversariantes do m칡s especificado
            }
        } else {
            System.out.println("游늷 Op칞칚o inv치lida!"); // Caso a escolha seja inv치lida
        }
    }

    public static void main(String[] args) {
        while (true) { // Loop principal do menu
            System.out.println("""
                [1] - Listar funcion치rios
                [2] - Remover um funcion치rio
                [3] - Aumentar sal치rio de todos os funcion치rios em 10%
                [4] - Listar funcion치rios por cargo
                [5] - Listar por m칡s de anivers치rio
                [6] - Listar funcion치rio mais velho
                [7] - Exibir o total dos sal치rios
                [8] - Exibir quantos sal치rios m칤nimos cada funcion치rio ganha
                [10] - Sair
            """);

            int choice = scanner.nextInt(); // Leitura da op칞칚o escolhida
            scanner.nextLine(); // Consumir a quebra de linha ap칩s nextInt()

            switch (choice) { // Estrutura de controle para cada escolha
                case 1 -> manager.displayEmployees(); // Exibe os funcion치rios
                case 2 -> removeEmployee(); // Chama a fun칞칚o para remover um funcion치rio
                case 3 -> manager.increaseSalariesBy10Percent(); // Aumenta o sal치rio de todos em 10%
                case 4 -> listEmployeesByRole(); // Lista os funcion치rios por cargo
                case 5 -> listEmployeesByBirthMonth(); // Lista os funcion치rios por m칡s de anivers치rio
                case 6 -> manager.displayOldestEmployee(); // Exibe o funcion치rio mais velho
                case 7 -> manager.displayTotalSalaries(); // Exibe o total de sal치rios
                case 8 -> manager.displaySalariesInMinimumWages(); // Exibe sal치rios em m칰ltiplos do sal치rio m칤nimo
                case 10 -> {
                    System.out.println("Encerrando..."); // Encerra o programa
                    return;
                }
                default -> System.out.println("Op칞칚o inv치lida!"); // Caso a op칞칚o seja inv치lida
            }
        }
    }
}

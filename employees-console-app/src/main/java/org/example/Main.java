package org.example;

import org.example.employeeManager.EmployeeManager;

import java.util.Scanner;

public class Main {

    private static final Scanner scanner = new Scanner(System.in);
    private static final EmployeeManager manager = new EmployeeManager(); // Inst칙ncia do gerenciador

    // Fun칞칚o para remover um funcion치rio
    private static void removeEmployee() {
        System.out.println("""
            [1] - Para remover o funcion치rio Jo칚o
            [2] - Escolher outro funcion치rio
            """);

        int choice = -1;
        try {
            choice = scanner.nextInt();
            scanner.nextLine(); // Consumir a quebra de linha
        } catch (Exception e) {
            System.out.println("Entrada inv치lida! Digite um n칰mero.");
            scanner.nextLine(); // Consumir o buffer da entrada inv치lida
        }

        String name = null;
        if (choice == 1) {
            name = "Jo칚o";
        } else if (choice == 2) {
            System.out.println("Digite o nome do funcion치rio a ser removido:");
            name = scanner.nextLine(); // Solicita o nome
        }

        if (name != null) {
            manager.removeEmployeeByName(name);
        } else {
            System.out.println("Op칞칚o inv치lida.");
        }
    }

    // Fun칞칚o para listar os funcion치rios por cargo
    private static void listEmployeesByRole() {
        System.out.println("Digite a fun칞칚o para listar os funcion치rios:");
        manager.displayEmployeesByRole(scanner.nextLine());
    }

    // Fun칞칚o para listar os funcion치rios por m칡s de anivers치rio
    private static void listEmployeesByBirthMonth() {
        System.out.println("""
        Escolha uma op칞칚o:
        [1] - Listar aniversariantes dos meses 10 e 12
        [2] - Escolher um m칡s espec칤fico
    """);

        int choice = -1;
        try {
            choice = scanner.nextInt();
            scanner.nextLine();
        } catch (Exception e) {
            System.out.println("Entrada inv치lida! Digite um n칰mero.");
            scanner.nextLine(); // Consumir o buffer
        }

        if (choice == 1) {
            manager.displayDefaultBirthMonths(); // Exibe aniversariantes de Outubro e Dezembro
        } else if (choice == 2) {
            System.out.println("Digite o n칰mero do m칡s (1-12): ");
            int month = -1;
            try {
                month = scanner.nextInt();
                scanner.nextLine();
                // Valida m칡s e exibe aniversariantes
                String message = (month < 1 || month > 12) ? "游늷 M칡s inv치lido! Digite um valor entre 1 e 12." : null;
                if (message != null) {
                    System.out.println(message);
                } else {
                    manager.displayEmployeesByBirthMonth(month); // Exibe aniversariantes do m칡s espec칤fico
                }
            } catch (Exception e) {
                System.out.println("Entrada inv치lida! Digite um n칰mero.");
                scanner.nextLine(); // Consumir o buffer
            }
        } else {
            System.out.println("游늷 Op칞칚o inv치lida!");
        }
    }

    public static void main(String[] args) {
        while (true) {
            System.out.println("""
                               Gest칚o de funcion치rios
            -------------------------------------------------------------
            [1] - Listar funcion치rios
            [2] - Remover um funcion치rios
            [3] - Aumentar sal치rio de todos os funcion치rios em 10%
            [4] - Listar funcion치rios por cargo
            [5] - Listar funcion치rios por m칡s de anivers치rio
            [6] - Listar funcion치rio mais velho
            [7] - Exibir o total dos sal치rios
            [8] - Exibir quantos sal치rios m칤nimos cada funcion치rio ganha
            [9] - Sair
            -------------------------------------------------------------
            """);

            int choice = -1;
            try {
                choice = scanner.nextInt();
                scanner.nextLine();
            } catch (Exception e) {
                System.out.println("Entrada inv치lida! Digite um n칰mero.");
                scanner.nextLine();
            }

            switch (choice) {
                case 1 -> manager.displayEmployees();
                case 2 -> removeEmployee();
                case 3 -> manager.increaseSalariesBy10Percent();
                case 4 -> listEmployeesByRole();
                case 5 -> listEmployeesByBirthMonth();
                case 6 -> manager.displayOldestEmployee();
                case 7 -> manager.displayTotalSalaries();
                case 8 -> manager.displaySalariesInMinimumWages();
                case 9 -> {
                    System.out.println("""
                    Encerrando...
                    Desenvolvido por Jo칚o V칤tor Santos Lima
                    """);
                    return;
                }
                default -> System.out.println("Op칞칚o inv치lida!");
            }
        }
    }
}
